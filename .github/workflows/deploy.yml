name: Deploy

on:
    push:
        branches:
            - test

jobs:
#    test:
#        name: Test
#        runs-on: ubuntu-22.04
#        steps:
#            -   name: Checkout
#                uses: actions/checkout@v2
#                with:
#                    fetch-depth: 0
#
#            -   name: Set Up Python
#                uses: actions/setup-python@v2
#                with:
#                    python-version: 3.9
#                    cache: pip
#
#            -   uses: actions/cache@v2
#                id: cache-packages
#                with:
#                    path: ${{ env.pythonLocation }}
#                    key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
#
#            -   name: Run Tests
#                run: |
#                    coverage run --source='.' manage.py test
#                    coverage xml
#                    coverage report
#
#            -   name: Coverage Comment
#                id: coverage_comment
#                uses: ewjoachim/python-coverage-comment-action@v2
#                with:
#                    GITHUB_TOKEN: ${{ github.token }}
#
#            -   name: Store Pull Request Comment To Be Posted
#                uses: actions/upload-artifact@v2
#                if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
#                with:
#                    name: python-coverage-comment-action
#                    path: python-coverage-comment-action.txt

    deploy:
        name: Deploy
#        needs: [ test ]
        runs-on: ubuntu-22.04
        environment: PRODUCTION

        env:
            ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
            CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
            EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
            EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
            EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
            S3_BUCKET_NAME: ${{ secrets.SCW_S3_BUCKET_NAME }}
            S3_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
            S3_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
            FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_PORT: ${{ secrets.DB_PORT }}
            DB_HOST: ${{ secrets.DB_HOST }}
            JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
            IMAGE: ${{ github.event.repository.name }}:latest
            SERVICE: ${{ github.repository}}

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Login to docker
                uses: docker/login-action@v1
                with:
                    registry: ${{ secrets.SCW_DOCKER_REGISTRY }}
                    username: ${{ secrets.SCW_DOCKER_USERNAME }}
                    password: ${{ secrets.SCW_TOKEN }}

            -   name: Build and push the container
                run: |
                    docker build -t ${{ secrets.SCW_DOCKER_REGISTRY }}/${{ env.IMAGE }} .
                    docker push ${{ secrets.SCW_DOCKER_REGISTRY }}/${{ env.IMAGE }}

            -   name: Set secrets within the scaleway
                run: |
                    curl -X PATCH --fail-with-body \
                      https://api.scaleway.com/containers/v1beta1/regions/fr-par/containers/${{ secrets.SCW_CONTAINER_ID }} \
                      -H 'X-Auth-Token: ${{ secrets.SCW_TOKEN }}' \
                      -H 'Content-Type: application/json' \
                      -d '{
                        "registry_image": "${{ secrets.SCW_DOCKER_REGISTRY }}/${{ env.IMAGE }}",
                        "secret_environment_variables": [
                          {
                            "key": "ALLOWED_HOSTS",
                            "value": "${{ env.ALLOWED_HOSTS }}"
                          },
                          {
                            "key": "CORS_ALLOWED_ORIGINS",
                            "value": "${{ env.CORS_ALLOWED_ORIGINS }}"
                          },
                          {
                            "key": "DB_HOST",
                            "value": "${{ env.DB_HOST }}"
                          },
                          {
                            "key": "DB_NAME",
                            "value": "${{ env.DB_NAME }}"
                          },
                          {
                            "key": "DB_PASSWORD",
                            "value": "${{ env.DB_PASSWORD }}"
                          },
                          {
                            "key": "DB_PORT",
                            "value": "${{ env.DB_PORT }}"
                          },
                          {
                            "key": "DB_USER",
                            "value": "${{ env.DB_USER }}"
                          },
                          {
                            "key": "FRONTEND_URL",
                            "value": "${{ env.FRONTEND_URL }}"
                          },
                          {
                            "key": "JWT_SIGNING_KEY",
                            "value": "${{ env.JWT_SIGNING_KEY }}"
                          },
                          {
                            "key": "S3_ACCESS_KEY",
                            "value": "${{ env.S3_ACCESS_KEY }}"
                          },
                          {
                            "key": "S3_SECRET_KEY",
                            "value": "${{ env.S3_SECRET_KEY }}"
                          },
                          {
                            "key": "S3_BUCKET_NAME",
                            "value": "${{ env.S3_BUCKET_NAME }}"
                          },
                          {
                            "key": "SECRET_KEY",
                            "value": "${{ env.SECRET_KEY }}"
                          },
                          {
                            "key": "EMAIL_ADDRESS",
                            "value": "${{ env.EMAIL_ADDRESS }}"
                          },
                          {
                            "key": "EMAIL_HOST",
                            "value": "${{ env.EMAIL_HOST }}"
                          },
                          {
                            "key": "EMAIL_PASSWORD",
                            "value": "${{ env.EMAIL_PASSWORD }}"
                          },
                          {
                            "key": "EMAIL_PORT",
                            "value": "${{ env.EMAIL_PORT }}"
                          },
                          {
                            "key": "SERVICE",
                            "value": "${{ env.SERVICE }}"
                          },
                          {
                            "key": "IMAGE",
                            "value": "${{ env.IMAGE }}"
                          }
                        ]
                      }'

            -   name: Trigger a redeploy
                run: |
                    curl -X PATCH --fail-with-body \
                      https://api.scaleway.com/containers/v1beta1/regions/fr-par/containers/${{ secrets.SCW_CONTAINER_ID }}/ \
                      -H 'X-Auth-Token: ${{ secrets.SCW_TOKEN }}' \
                      -H 'Content-Type: application/json' \
                      -d '{ "redeploy": true }'
