name: Analyze

on:
    pull_request:
        branches:
            - main

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        environment: TEST
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   name: Set Up Python
                uses: actions/setup-python@v3
                with:
                    python-version: 3.9

            -   uses: actions/cache@v2
                id: cache-packages
                with:
                    path: ./tmp/venv
                    key: ${{ runner.os }}-packages-${{ hashFiles('requirements.txt') }}

            -   name: Setup Virtual Environment
                if: steps.cache-packages.outputs.cache-hit != 'true'
                run: |
                    python -m venv ./tmp/venv
                    source ./tmp/venv/bin/activate

            -   name: Install Dependencies
                if: steps.cache-packages.outputs.cache-hit != 'true'
                run: |
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt

            -   uses: actions/cache@v2
                id: cache-app
                with:
                    path: ./
                    key: ${{ github.sha }}

    clean:
        name: Clean
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            -   uses: actions/cache@v2
                id: cache-app
                with:
                    path: ./
                    key: ${{ github.sha }}

            -   name: Activate Virtual Environment
                run: source ./tmp/venv/bin/activate

            -   name: Clean
                uses: pre-commit/action@v3.0.0

            -   name: Test
                run: |
                    coverage run --source='.' manage.py test
                    coverage xml
                    coverage report

            -   name: Scan
                uses: SonarSource/sonarcloud-github-action@master
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
