# Generated by Django 3.2.11 on 2022-02-05 12:04

import apps.static.encryption
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0079_alter_rlcuser_note'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CollabDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(null=True)),
                ('path', models.CharField(max_length=4096)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collab_documents', to=settings.AUTH_USER_MODEL)),
                ('rlc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collab_documents', to='api.rlc')),
            ],
            options={
                'verbose_name': 'CollabDocument',
                'verbose_name_plural': 'CollabDocuments',
            },
        ),
        migrations.CreateModel(
            name='CollabPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'CollabPermission',
                'verbose_name_plural': 'CollabPermissions',
            },
        ),
        migrations.CreateModel(
            name='TextDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='text_documents_created', to=settings.AUTH_USER_MODEL)),
                ('rlc', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='text_documents', to='api.rlc')),
            ],
            options={
                'verbose_name': 'TextDocument',
                'verbose_name_plural': 'TextDocuments',
            },
        ),
        migrations.CreateModel(
            name='TextDocumentVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_draft', models.BooleanField(default=True)),
                ('content', models.BinaryField(blank=True)),
                ('quill', models.BooleanField(default=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='text_document_versions_created', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='collab.textdocument')),
            ],
            options={
                'verbose_name': 'TextDocumentVersion',
                'verbose_name_plural': 'TextDocumentVersions',
            },
            bases=(apps.static.encryption.EncryptedModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PermissionForCollabDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collab_permissions', to='collab.collabdocument')),
                ('group_has_permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_has_collab_permission', to='api.group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_permission_for_document', to='collab.collabpermission')),
            ],
            options={
                'unique_together': {('permission', 'group_has_permission', 'document')},
            },
        ),
    ]
